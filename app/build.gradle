apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
//apply plugin: 'com.google.firebase.crashlytics'
//apply plugin: 'com.google.gms.google-services'

def versionMajor = 0
def versionMinor = 9
def versionPatch = 16

android {

    buildFeatures {
        viewBinding true
    }
    compileSdkVersion 30
	buildToolsVersion '30.0.3'
	defaultConfig {
		applicationId "com.dimowner.quranicmistakeshelper"
		minSdkVersion 28
		targetSdkVersion 30
//		versionCode versionMajor * 10000 + versionMinor * 100 + versionPatch
//		versionName "${versionMajor}.${versionMinor}.${versionPatch}"
		versionCode 916
		versionName "0.9.16"
	}

//	def keystorePropertiesFile = rootProject.file("keystore.properties")
//	def keystoreProperties = new Properties()
//	keystoreProperties.load(new FileInputStream(keystorePropertiesFile))

	signingConfigs {
		dev {
			storeFile file('key/debug/debug.keystore')
			storePassword 'android'
			keyAlias 'androiddebugkey'
			keyPassword 'android'
		}
		release {
			storeFile file('key/release/quran3appkey.jks')
			storePassword 'quran12345'
			keyAlias 'quran'
		keyPassword 'quran12345'
		}

	}

	buildTypes {
		release {
			minifyEnabled true
			shrinkResources true
			proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
			signingConfig signingConfigs.release
//			firebaseCrashlytics {
//				mappingFileUploadEnabled true
//			}
		}
		debug {
			minifyEnabled false
		}
	}

	flavorDimensions "default"

	productFlavors {
		debugConfig {
			dimension "default"
			applicationId "com.dimowner.quranicmistakeshelper.debug"
			signingConfig = signingConfigs.dev
		}
		releaseConfig {
			dimension "default"
			signingConfig = signingConfigs.dev
			applicationId "com.dimowner.quranicmistakeshelper"
		}
	}

	compileOptions {
		sourceCompatibility = JavaVersion.VERSION_1_8
		targetCompatibility = JavaVersion.VERSION_1_8
	}

	lintOptions {
		abortOnError false
	}
}

// Remove not needed buildVariants.
android.variantFilter { variant ->
	if (variant.buildType.name == 'release'
			&& variant.getFlavors().get(0).name == 'debugConfig') {
		variant.setIgnore(true)
	}
	if (variant.buildType.name == 'debug'
			&& variant.getFlavors().get(0).name == 'releaseConfig') {
		variant.setIgnore(true)
	}
}

dependencies {
	implementation 'androidx.appcompat:appcompat:1.3.1'
    implementation 'com.google.android.material:material:1.4.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.0'
    implementation 'androidx.navigation:navigation-fragment:2.3.5'
    implementation 'androidx.navigation:navigation-ui:2.3.5'
	implementation("com.squareup.okhttp3:okhttp:4.9.0")
    implementation 'com.android.volley:volley:1.2.0'
	implementation 'com.google.code.gson:gson:2.8.6'
	implementation 'com.google.firebase:firebase-firestore:22.1.2'

	def androidX = '1.2.1'
	def coroutines = "1.3.9"
	def timber = "4.7.1"

	//Kotlin
	implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
	implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutines"
	implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutines"

	//Timber
	implementation "com.jakewharton.timber:timber:$timber"
	implementation "androidx.recyclerview:recyclerview:$androidX"

	implementation "androidx.viewpager2:viewpager2:1.0.0"

//	// Import the BoM for the Firebase platform
//	implementation platform('com.google.firebase:firebase-bom:26.1.0')
//	// Declare the dependencies for the Crashlytics and Analytics libraries
//	// When using the BoM, you don't specify versions in Firebase library dependencies
//	implementation 'com.google.firebase:firebase-crashlytics'
//	implementation 'com.google.firebase:firebase-analytics'
}
